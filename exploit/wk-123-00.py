# -*- coding:utf-8 -*- 
#!/usr/bin/env python3
#Description: wukong exploit 
#Author:      Bing
#Email:       amzing_bing@outlook.com
#DateTime:    2017-05-10 23:08:39

import sys,os,re
sys.path.append("..")

import socket
from exploit.module.example import WKExploit

class Exploit(WKExploit) :
	def __init__(self, args) :
		'''
		漏洞信息和测试参数
		'''
		self.info = {
			# 输入参数
			"protorl" : self.parameter(args["protorl"],"http://"),
			"host" : self.parameter(args["host"], ""), 
			"port" : self.parameter(args["port"], ""),
			"cookie" : self.parameter(args["cookie"], ""),
			"fuzzing" : list(range(1,7000)),
		}
		
		self.result = {
			# 结果信息
			"status" : False,
			"data" : [{
				"bug_name" : "端口扫描",
				"bug_author" : "Bing",
				"bug_level" : self.level.normal,
				"bug_type" : self.category.other,
				"bug_ref" : "",
				"bug_desc" : "",
				"bug_result" : [],
				"bug_repair" : ""
			}],
		}


	def get_port_service(self, port, content):
		BASE_PATH = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
		DICT_PATH = os.path.join(BASE_PATH,'dictionary')
		service_path = os.path.join(DICT_PATH, "nmap-service.txt")
		text = ["mysql","redis","amqp","mssql","oracle","redis","ssh"]
		for word in text :
			m = re.search(word, content, re.IGNORECASE)
			if m :
				return word

		port_server = str(port)+"/tcp"
		with open(service_path,"r") as server:
			for finger in server.readlines():
				port_info = finger.strip().split(";")[1]
				if port_info == port_server:
					fingers = str(finger.strip().split(";")[0])
					return fingers


	def check(self, txt):
		'''
		漏洞验证
		'''
		sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		sock.settimeout(2)
		host = self.info["host"]
		address = (host, txt)

		try:
			sock.connect(address)
			sock.send("OPTION ／ HTTP 1.1\r\n".encode())
			text = sock.recv(256)

			self.result["status"] = True
			buffers = """{}""".format(str(text.__str__()[0:200]))
			finger = self.get_port_service(txt,buffers)
			#result = "%s|%s|%s" % (txt, finger, buffers)
			result = "%s|%s" % (txt, finger)
			self.result["data"][0]["bug_result"].append(result)
		except Exception as e:
			#print('Error:', e)
			sock.close()
		sock.close()





